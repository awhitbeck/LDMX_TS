This README file will give a brief description of all the files included in this directory. The files will need some manipulation before being used,
also many of these files are designed to work in tandem with ldmx and ldmx_ts. Both will be needed. I will include a skeleton diagram of input and output files
to help with this as well as how I would run them once they are "cleaned up" to run on your machine.

runner1/2.sh

These are the instances of the sh file which can automatically run over detector geometries. I am not certain 
which one is immediattely available to be compiled; I would run each and see if either breaks down. Then investigate each of 
the filechanger/markitdownfiles. Furthermore it will also talk to runSimAndDigi (etc) included in Modifications of LDMX_TS Software, 
so wherever one of those files is mentioned you may check for issues there. I think its the case that runner.sh has some obsolete logging being done,
and thats the main difference.

input:
output:

filechanger2.py

This file automatically changes the parameters of the detector in ldmx/Detector/.../constants.gdml (and possibly elsewhere) so that the above 
function can run over all the possible values of detector geometries. Certain columns of the gdml file are changed by adding to runner.sh the first
number 35,36,etc corresponding to the line number of the constant, and then the value which corresponds to the value desired.

input:
output:

ThrowAway.py

Takes information from logFile.txt and from runner2.sh (more specifically when runner2.sh ran testanalyzer2.py from LDMX_TS). The idea was
to plot some metric like the number of overcounting events over total events vs detector geometries. Again exhaustive searches became obsolete, 
but is all here if you want to play with it.

input:
output:

ALOT OF THE FOLLOWING FILES ARE NOT IMPLMENTED IN RUNNER.SH (SOMETIMES BECAUSE THEY ARE OBSOLETE). 
I have included them in case you find a use for the obsolte functions. They are mainly the obsolete logging mentioned the description of runner.sh (NOT runner2.sh)
##########################################################################################

filechanger1.py

Not currently implemented anywhere, but the first instance of automatic gdml changing. filechanger2 was created to more generally allow the
changing of any number of constants.

input:
output:

filechanger3.py

Obsolete file. Logs the second value j of the constant gdml file (I believe its scintillator bar width). Included so that the file will run hopefully 
without extra modifications necessary.

input:
output:

markitdown.py

copied down the extra number of tracks after runSimAndDigi was run before its capabilities were incorporated into testanalyzer. 

input:
output:

markitdowncluster.py

copied down the goemetry parameters of a particular geometry. No longer implemented into either of the .sh files.

input:
output:

#############################################################################################

NOW FOR THE MODIFICATIONS TO LDMX_TS files (move to that directory to see the files described herein)

test_analyzer.py

Obsolete file used for analysis in runner.sh. Did not itself calculate confusion matrix elements. It rather plotted every event and the number of tracks found therein

input:
output:

test_analyzer2.py

Used in tandem with runner2.sh to fund confusion matrices for a particular geometry. Also used solo with just runClusteringAndTracking and runSumAndDigi in 
case you wanted to focus on promising geometries instead of an exhaustive search approach. Generated confusion matrix entries for a particular num of electron
and logged it in logFile.txt

Note I originally included runSimAndDigi and runTrackingAndClustering in the modifications of LDMX_TS Software, but they weren't modified to any true extent.
The above analysis (and the special case analysis) can be performed using the old LDMX_TS software and the new version of test_analyzer2.py.

input:
output:
